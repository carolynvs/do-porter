# This is the configuration for Porter
# You must define steps for each action, but the rest is optional
# See https://porter.sh/authoring-bundles for documentation on how to configure your bundle
# Uncomment out the sections below to take full advantage of what Porter can do!

name: HELLO
version: 0.1.0
description: "An example Porter configuration"
invocationImage: jeremyrickard/porter-do:latest
tag: jeremyrickard/porter-do-bundle:latest

# Uncomment out the line below to use a template Dockerfile for your invocation image
dockerfile: Dockerfile.tmpl


credentials:
- name: do_access_token
  env: DO_ACCESS_TOKEN
- name: do_spaces_key
  env: DO_SPACES_KEY
- name: do_spaces_secret
  env: DO_SPACES_SECRET

parameters:
- name: region
  type: string
  default: "nyc3"
- name: space_name
  type: string
  default: "jrrportertest"
- name: database_name
  type: string
  default: "jrrportertest"

mixins:
  - exec
  - terraform

install:
  - exec:
      description: "s3cmd create bucket"
      command: s3cmd
      arguments:
        - mb
        - "s3://{{bundle.parameters.space_name}}"
        - "--access_key={{bundle.credentials.do_spaces_key}}"
        - "--secret_key={{bundle.credentials.do_spaces_secret}}"
        - "--host={{bundle.parameters.region}}.digitaloceanspaces.com"
        - "--host-bucket=%(bucket)s.{{bundle.parameters.region}}.digitaloceanspaces.com"
  - terraform:
      description: "Create DO PostgreSQL With Terraform"
      autoApprove: true
      input: false
      backendConfig:
        key: "{{ bundle.name }}.tfstate"
        access_key: "{{bundle.credentials.do_spaces_key}}"
        secret_key: "{{bundle.credentials.do_spaces_secret}}"
        bucket: "{{bundle.parameters.space_name}}"
        endpoint: "{{bundle.parameters.region}}.digitaloceanspaces.com"
      vars:
        do_token: "{{bundle.credentials.do_access_token}}"
        region: "{{bundle.parameters.region}}"
        database_name: "{{bundle.parameters.database_name}}"

upgrade:
  - exec:
      description: "World 2.0"
      command: bash
      arguments:
        - -c
        - echo World 2.0

uninstall:
  - terraform:
      description: "Create DO PostgreSQL With Terraform"
      autoApprove: true
      input: false
      backendConfig:
        key: "{{ bundle.name }}.tfstate"
        access_key: "{{bundle.credentials.do_spaces_key}}"
        secret_key: "{{bundle.credentials.do_spaces_secret}}"
        bucket: "{{bundle.parameters.space_name}}"
        endpoint: "{{bundle.parameters.region}}.digitaloceanspaces.com"
      vars:
        do_token: "{{bundle.credentials.do_access_token}}"
        region: "{{bundle.parameters.region}}"
        database_name: "{{bundle.parameters.database_name}}"
  - exec:
      description: "s3cmd delete bucket"
      command: s3cmd
      arguments:
        - del
        - "s3://{{bundle.parameters.space_name}}"
        - "--recursive"
        - "--force"
        - "--access_key={{bundle.credentials.do_spaces_key}}"
        - "--secret_key={{bundle.credentials.do_spaces_secret}}"
        - "--host={{bundle.parameters.region}}.digitaloceanspaces.com"
        - "--host-bucket=%(bucket)s.{{bundle.parameters.region}}.digitaloceanspaces.com"
  - exec:
      description: "s3cmd delete bucket"
      command: s3cmd
      arguments:
        - rb
        - "s3://{{bundle.parameters.space_name}}"
        - "--force"
        - "--access_key={{bundle.credentials.do_spaces_key}}"
        - "--secret_key={{bundle.credentials.do_spaces_secret}}"
        - "--host={{bundle.parameters.region}}.digitaloceanspaces.com"
        - "--host-bucket=%(bucket)s.{{bundle.parameters.region}}.digitaloceanspaces.com"



# See https://porter.sh/authoring-bundles/#dependencies
#dependencies:
#  mysql:
#    tag: deislabs/porter-mysql:latest
#    parameters:
#      database-name: wordpress

# See https://porter.sh/wiring/#credentials
#credentials:
#  - name: kubeconfig
#    path: /root/.kube/config
